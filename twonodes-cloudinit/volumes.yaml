# Example invocation: heat stack-create --poll -f volume.yaml myvolume
heat_template_version: 2015-10-15


parameters:
  app_size:
    type: number
    default: 1
    description: Size of the application volume in gigabytes
  db_size:
    type: number
    default: 1
    description: Size of the database volume in gigabytes


resources:

  app_volume:
    type: OS::Cinder::Volume
    properties:
      name:
        list_join:
          - "_"
          - - { get_param: 'OS::stack_name' }
            - appvolume
      size: { get_param: size }

  db_volume:
    type: OS::Cinder::Volume
    properties:
      name:
        list_join:
          - "_"
          - - { get_param: 'OS::stack_name' }
            - appvolume
      size: { get_param: size }

outputs:
  app_volume_id:
    value: { get_resource: appvolume }

  db_volume_id:
    value: { get_resource: dbvolume }


resources:

  app_volume:
    type: OS::Cinder::Volume
    properties:
      name: myencryptedvolume
      size: { get_param: size }

  db_volume:
    type: OS::Cinder::Volume
    properties:
      name: myencryptedvolume
      size: { get_param: size }

outputs:
  # Retrieval after stack creation (presuming stack is named `myvolumes`): 
  # heat output-show myvolumes app_volume_id
  app_volume_id:
    value: { get_resource: appvolume }

  # Retrieval after stack creation (presuming stack is named `myvolumes`): 
  # heat output-show myvolumes db_volume_id
  db_volume_id:
    value: { get_resource: dbvolume }
